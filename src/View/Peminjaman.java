/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package View;

/**
 *
 * @author YANUAREKA
 */
import Config.Koneksi;
import java.awt.Image;
import java.sql.PreparedStatement;
import java.sql.Statement;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import table.TableCustom;
import com.formdev.flatlaf.FlatLightLaf;

public class Peminjaman extends javax.swing.JPanel {

    /**
     * Creates new form Dashboard
     */
    private Connection conn;
    private Statement stm;
    private PreparedStatement pStm;
    private ResultSet rs;
    
    private String userId;
    private String filename;
    
    public Peminjaman(String userId) {
        initComponents();
        
        FlatLightLaf.setup();
        
        //Set table costum
        tableCustom1.apply(jScrollPane1, TableCustom.TableType.DEFAULT);
        conn = Koneksi.getConnection();
        this.userId = userId;
        
        setTabelModel();
        setTableModelSementara();
        setTableModelDetail();
        loadData();
        loadDataSementara();
    }

    /**
     * This method is called from within the constructor to initialize the form. 
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dateChooser1 = new com.raven.datechooser.DateChooser();
        dateChooser2 = new com.raven.datechooser.DateChooser();
        tableCustom1 = new table.TableCustom();
        tableCustom2 = new table.TableCustom();
        pn_main = new javax.swing.JPanel();
        pn_view = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblData = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        btnTambah = new rojerusan.RSMaterialButtonRectangle();
        searchTf = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        pnDetail = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblDataDetail = new javax.swing.JTable();
        jLabel4 = new javax.swing.JLabel();
        btnCloseDetail = new javax.swing.JLabel();
        pn_add = new javax.swing.JPanel();
        labelHeader = new javax.swing.JLabel();
        btnSave = new rojerusan.RSMaterialButtonRectangle();
        btnCancelData = new rojerusan.RSMaterialButtonRectangle();
        lbImage = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        idTf = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        tglPinjamTf = new javax.swing.JTextField();
        tglKembaliTf = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        idAnggotaTf = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        namaAnggotaTf = new javax.swing.JTextField();
        emailAnggotaTf = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        tlpAnggotaTf = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        btnSetAnggota = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        pengarangBukuTf = new javax.swing.JTextField();
        penerbitBukuTf = new javax.swing.JTextField();
        judulBukuTf = new javax.swing.JTextField();
        idBukuTf = new javax.swing.JTextField();
        btnSetBuku = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jumlahTf = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        lbTotal = new javax.swing.JLabel();
        btnUbah = new rojerusan.RSMaterialButtonRectangle();
        btnDelete = new rojerusan.RSMaterialButtonRectangle();
        btnCancelDataSementara = new rojerusan.RSMaterialButtonRectangle();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblDataSementara = new javax.swing.JTable();

        dateChooser1.setForeground(new java.awt.Color(55, 71, 79));
        dateChooser1.setDateFormat("yyyy-MM-dd");
        dateChooser1.setTextRefernce(tglPinjamTf);

        dateChooser2.setForeground(new java.awt.Color(55, 71, 79));
        dateChooser2.setDateFormat("yyyy-MM-dd");
        dateChooser2.setTextRefernce(tglKembaliTf);

        setLayout(new java.awt.CardLayout());

        pn_main.setBackground(new java.awt.Color(255, 255, 255));
        pn_main.setLayout(new java.awt.CardLayout());

        pn_view.setBackground(new java.awt.Color(255, 255, 255));

        tblData.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        tblData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id Peminjaman", "Tanggal Pinjam", "Tanggal Kembali", "Total Pinjam", "Anggota", "Petugas"
            }
        ));
        tblData.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDataMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblData);
        if (tblData.getColumnModel().getColumnCount() > 0) {
            tblData.getColumnModel().getColumn(2).setHeaderValue("Tanggal Kembali");
        }

        jLabel1.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Health Book_2.png"))); // NOI18N
        jLabel1.setText("Data Peminjaman Buku Perpustakaan");

        jLabel2.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(153, 153, 153));
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Health Book_2.png"))); // NOI18N
        jLabel2.setText("Transaksi > Peminjaman");

        btnTambah.setBackground(new java.awt.Color(55, 71, 79));
        btnTambah.setText("tambah");
        btnTambah.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnTambah.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        searchTf.setFont(new java.awt.Font("Poppins", 2, 14)); // NOI18N
        searchTf.setForeground(new java.awt.Color(153, 153, 153));
        searchTf.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                searchTfKeyTyped(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(153, 153, 153));
        jLabel3.setText("Cari");

        tblDataDetail.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        tblDataDetail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id Peminjaman", "Id Buku", "Judul Buku", "Jumlah", "Status Peminjaman"
            }
        ));
        jScrollPane2.setViewportView(tblDataDetail);

        jLabel4.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Health Book_2.png"))); // NOI18N
        jLabel4.setText("Data Detail Peminjaman Buku Perpustakaan");

        btnCloseDetail.setBackground(new java.awt.Color(51, 51, 51));
        btnCloseDetail.setFont(new java.awt.Font("Poppins", 1, 24)); // NOI18N
        btnCloseDetail.setForeground(new java.awt.Color(153, 153, 153));
        btnCloseDetail.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        btnCloseDetail.setText("X");
        btnCloseDetail.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCloseDetail.setPreferredSize(new java.awt.Dimension(35, 35));
        btnCloseDetail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnCloseDetailMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnDetailLayout = new javax.swing.GroupLayout(pnDetail);
        pnDetail.setLayout(pnDetailLayout);
        pnDetailLayout.setHorizontalGroup(
            pnDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnDetailLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnDetailLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1114, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(pnDetailLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCloseDetail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
        );
        pnDetailLayout.setVerticalGroup(
            pnDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnDetailLayout.createSequentialGroup()
                .addGroup(pnDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnCloseDetail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnDetailLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pn_viewLayout = new javax.swing.GroupLayout(pn_view);
        pn_view.setLayout(pn_viewLayout);
        pn_viewLayout.setHorizontalGroup(
            pn_viewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_viewLayout.createSequentialGroup()
                .addGroup(pn_viewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pn_viewLayout.createSequentialGroup()
                        .addComponent(btnTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(searchTf, javax.swing.GroupLayout.PREFERRED_SIZE, 283, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pn_viewLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pn_viewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1)
                            .addGroup(pn_viewLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_viewLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel2))
                            .addComponent(pnDetail, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        pn_viewLayout.setVerticalGroup(
            pn_viewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_viewLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(pn_viewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pn_viewLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(3, 3, 3)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnTambah, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pn_viewLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(searchTf, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(pnDetail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pn_main.add(pn_view, "card2");

        pn_add.setBackground(new java.awt.Color(255, 255, 255));

        labelHeader.setFont(new java.awt.Font("Poppins", 0, 18)); // NOI18N
        labelHeader.setText("Tambah Data Peminjaman Buku Perpustakaan");

        btnSave.setBackground(new java.awt.Color(55, 71, 79));
        btnSave.setText("simpan");
        btnSave.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSave.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnCancelData.setBackground(new java.awt.Color(204, 204, 204));
        btnCancelData.setText("batal");
        btnCancelData.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCancelData.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        btnCancelData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelDataActionPerformed(evt);
            }
        });

        lbImage.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        lbImage.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbImage.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/Add Book.png"))); // NOI18N
        lbImage.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(204, 204, 204)));

        jLabel7.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jLabel7.setText("ID");

        idTf.setFont(new java.awt.Font("Poppins", 2, 14)); // NOI18N
        idTf.setForeground(new java.awt.Color(153, 153, 153));

        jLabel8.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jLabel8.setText("Tgl Pinjam");

        tglPinjamTf.setFont(new java.awt.Font("Poppins", 2, 14)); // NOI18N
        tglPinjamTf.setForeground(new java.awt.Color(153, 153, 153));

        tglKembaliTf.setFont(new java.awt.Font("Poppins", 2, 14)); // NOI18N
        tglKembaliTf.setForeground(new java.awt.Color(153, 153, 153));

        jLabel9.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jLabel9.setText("Tgl Pengembalian");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(idTf, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tglPinjamTf, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 67, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tglKembaliTf, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(15, 15, 15))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel9)
                        .addComponent(tglKembaliTf, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel8)
                        .addComponent(tglPinjamTf, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel7)
                        .addComponent(idTf, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        idAnggotaTf.setFont(new java.awt.Font("Poppins", 2, 14)); // NOI18N
        idAnggotaTf.setForeground(new java.awt.Color(153, 153, 153));
        idAnggotaTf.setText("Id");

        jLabel10.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jLabel10.setText("Anggota");

        jLabel11.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jLabel11.setText("Nama");

        namaAnggotaTf.setFont(new java.awt.Font("Poppins", 2, 14)); // NOI18N
        namaAnggotaTf.setForeground(new java.awt.Color(153, 153, 153));
        namaAnggotaTf.setText("Nama");

        emailAnggotaTf.setFont(new java.awt.Font("Poppins", 2, 14)); // NOI18N
        emailAnggotaTf.setForeground(new java.awt.Color(153, 153, 153));
        emailAnggotaTf.setText("Email");

        jLabel12.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jLabel12.setText("Email");

        tlpAnggotaTf.setFont(new java.awt.Font("Poppins", 2, 14)); // NOI18N
        tlpAnggotaTf.setForeground(new java.awt.Color(153, 153, 153));
        tlpAnggotaTf.setText("Telepon");

        jLabel13.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jLabel13.setText("Telepon");

        btnSetAnggota.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        btnSetAnggota.setForeground(new java.awt.Color(204, 204, 204));
        btnSetAnggota.setText("...");
        btnSetAnggota.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSetAnggotaActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jLabel14.setText("Buku");

        jLabel15.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jLabel15.setText("Judul");

        jLabel16.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jLabel16.setText("Pengarang");

        jLabel17.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jLabel17.setText("Penerbit");

        pengarangBukuTf.setFont(new java.awt.Font("Poppins", 2, 14)); // NOI18N
        pengarangBukuTf.setForeground(new java.awt.Color(153, 153, 153));
        pengarangBukuTf.setText("Pengarang");

        penerbitBukuTf.setFont(new java.awt.Font("Poppins", 2, 14)); // NOI18N
        penerbitBukuTf.setForeground(new java.awt.Color(153, 153, 153));
        penerbitBukuTf.setText("Penerbit");

        judulBukuTf.setFont(new java.awt.Font("Poppins", 2, 14)); // NOI18N
        judulBukuTf.setForeground(new java.awt.Color(153, 153, 153));
        judulBukuTf.setText("Judul Buku");

        idBukuTf.setFont(new java.awt.Font("Poppins", 2, 14)); // NOI18N
        idBukuTf.setForeground(new java.awt.Color(153, 153, 153));
        idBukuTf.setText("Id");

        btnSetBuku.setFont(new java.awt.Font("Poppins", 1, 14)); // NOI18N
        btnSetBuku.setForeground(new java.awt.Color(204, 204, 204));
        btnSetBuku.setText("...");
        btnSetBuku.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSetBukuActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jLabel18.setText("Total Pinjam");

        jumlahTf.setFont(new java.awt.Font("Poppins", 2, 14)); // NOI18N
        jumlahTf.setForeground(new java.awt.Color(153, 153, 153));
        jumlahTf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jumlahTfActionPerformed(evt);
            }
        });

        jLabel19.setFont(new java.awt.Font("Poppins", 0, 14)); // NOI18N
        jLabel19.setText("Jumlah");

        lbTotal.setFont(new java.awt.Font("Poppins", 1, 30)); // NOI18N
        lbTotal.setText("Total");

        btnUbah.setBackground(new java.awt.Color(55, 71, 79));
        btnUbah.setText("Ubah");
        btnUbah.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnUbah.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        btnUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahActionPerformed(evt);
            }
        });

        btnDelete.setBackground(new java.awt.Color(255, 0, 0));
        btnDelete.setText("hapus");
        btnDelete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnDelete.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnCancelDataSementara.setBackground(new java.awt.Color(204, 204, 204));
        btnCancelDataSementara.setText("batal");
        btnCancelDataSementara.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnCancelDataSementara.setFont(new java.awt.Font("Poppins Medium", 0, 14)); // NOI18N
        btnCancelDataSementara.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelDataSementaraActionPerformed(evt);
            }
        });

        tblDataSementara.setFont(new java.awt.Font("Poppins", 0, 12)); // NOI18N
        tblDataSementara.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Judul", "Pengarang", "Penerbit", "Jumlah Pinjam"
            }
        ));
        tblDataSementara.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblDataSementaraMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(tblDataSementara);
        if (tblDataSementara.getColumnModel().getColumnCount() > 0) {
            tblDataSementara.getColumnModel().getColumn(2).setHeaderValue("Tanggal Kembali");
        }

        javax.swing.GroupLayout pn_addLayout = new javax.swing.GroupLayout(pn_add);
        pn_add.setLayout(pn_addLayout);
        pn_addLayout.setHorizontalGroup(
            pn_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_addLayout.createSequentialGroup()
                .addGroup(pn_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pn_addLayout.createSequentialGroup()
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelData, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(pn_addLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pn_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(pn_addLayout.createSequentialGroup()
                                .addGroup(pn_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(jLabel13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel12, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pn_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pn_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addGroup(pn_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(emailAnggotaTf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(namaAnggotaTf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(pn_addLayout.createSequentialGroup()
                                            .addComponent(idAnggotaTf, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                            .addComponent(btnSetAnggota, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addComponent(tlpAnggotaTf, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(30, 30, 30)
                                .addGroup(pn_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(30, 30, 30)
                                .addGroup(pn_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(penerbitBukuTf)
                                    .addComponent(pengarangBukuTf)
                                    .addComponent(judulBukuTf)
                                    .addGroup(pn_addLayout.createSequentialGroup()
                                        .addComponent(idBukuTf, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnSetBuku, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(30, 30, 30)
                                .addComponent(lbImage, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addGroup(pn_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jumlahTf)
                                    .addGroup(pn_addLayout.createSequentialGroup()
                                        .addGroup(pn_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(lbTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(pn_addLayout.createSequentialGroup()
                                .addGroup(pn_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelHeader)
                                    .addGroup(pn_addLayout.createSequentialGroup()
                                        .addComponent(btnUbah, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnCancelDataSementara, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane3))))
                .addContainerGap())
        );
        pn_addLayout.setVerticalGroup(
            pn_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_addLayout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(labelHeader)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pn_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnCancelData, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(pn_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pn_addLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jumlahTf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbTotal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(pn_addLayout.createSequentialGroup()
                        .addGroup(pn_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pn_addLayout.createSequentialGroup()
                                .addGroup(pn_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(idBukuTf, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnSetBuku, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pn_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(judulBukuTf, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pn_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(pengarangBukuTf, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(pn_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(penerbitBukuTf, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(pn_addLayout.createSequentialGroup()
                                .addGroup(pn_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pn_addLayout.createSequentialGroup()
                                        .addGroup(pn_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(pn_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                .addComponent(idAnggotaTf, javax.swing.GroupLayout.DEFAULT_SIZE, 35, Short.MAX_VALUE)
                                                .addComponent(jLabel10))
                                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btnSetAnggota, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(pn_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(namaAnggotaTf, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel11))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(pn_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(emailAnggotaTf, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(jLabel12))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(pn_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel13)
                                            .addComponent(tlpAnggotaTf, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addComponent(lbImage, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(30, 30, 30)
                        .addGroup(pn_addLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnUbah, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCancelDataSementara, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)))
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20))
        );

        pn_main.add(pn_add, "card2");

        add(pn_main, "card2");
    }// </editor-fold>//GEN-END:initComponents

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        // TODO add your handling code here:
        pn_main.removeAll();
        pn_main.add(pn_add);
        pn_main.repaint();
        pn_main.revalidate();
        
        idTf.setText(setIdPeminjaman());
        int totalPinjam = getTotalPinjam();
        lbTotal.setText(String.valueOf(totalPinjam));
        btnUbah.setText("tambah"); 
    }//GEN-LAST:event_btnTambahActionPerformed
    
    private void btnCancelDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelDataActionPerformed
        // TODO add your handling code here:
        pn_main.removeAll();
        pn_main.add(pn_view);
        pn_main.repaint();
        pn_main.revalidate();
        
        showPanelView();
    }//GEN-LAST:event_btnCancelDataActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        if (btnSave.getText().equals("simpan")) {
            insertData();
            insertDataDetail();
            deleteDataSementara();
            resetForm();
            loadData();
            showPanelView();
        } else if(btnSave.getText().equals("perbarui")) {
            updateData();
            showPanelView();
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void searchTfKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchTfKeyTyped
        // TODO add your handling code here:
        searchData();
    }//GEN-LAST:event_searchTfKeyTyped

    private void btnUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahActionPerformed
        // TODO add your handling code here:
        if(btnUbah.getText().equals("tambah")) {
            insertDataSementara();
        } else if(btnUbah.getText().equals("ubah")) {
            updateData();
            int totalPinjam = getTotalPinjam();
            lbTotal.setText(String.valueOf(totalPinjam));
        }
    }//GEN-LAST:event_btnUbahActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        btnSetBuku.setEnabled(true);
        deleteData();
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSetAnggotaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSetAnggotaActionPerformed
        // TODO add your handling code here:
        setAnggota();
    }//GEN-LAST:event_btnSetAnggotaActionPerformed

    private void btnSetBukuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSetBukuActionPerformed
        // TODO add your handling code here:
        setBuku();
    }//GEN-LAST:event_btnSetBukuActionPerformed

    private void jumlahTfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jumlahTfActionPerformed
        // TODO add your handling code here:
        if(btnUbah.getText().equals("tambah")) {
            insertDataSementara();
        } else if (btnUbah.getText().equals("ubah")) {
            updateData();
        }
    }//GEN-LAST:event_jumlahTfActionPerformed

    private void tblDataSementaraMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDataSementaraMouseClicked
        // TODO add your handling code here:
        btnUbah.setText("ubah");
        btnDelete.setVisible(true);
        btnCancelDataSementara.setVisible(true);
        
        int totalPinjam = getTotalPinjam();
        lbTotal.setText(String.valueOf(totalPinjam));
        
        dataTabelSementara();
    }//GEN-LAST:event_tblDataSementaraMouseClicked

    private void btnCancelDataSementaraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelDataSementaraActionPerformed
        // TODO add your handling code here:
        btnUbah.setText("tambah");
        btnSetBuku.setEnabled(true);
        loadDataSementara();
        resetFormBuku();
    }//GEN-LAST:event_btnCancelDataSementaraActionPerformed

    private void tblDataMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblDataMouseClicked
        // TODO add your handling code here:
        pnDetail.setVisible(true);
        int row = tblData.getSelectedRow();
        String id = tblData.getValueAt(row, 0).toString();
        
        getDataDetail((DefaultTableModel) tblDataDetail.getModel(), id);
    }//GEN-LAST:event_tblDataMouseClicked

    private void btnCloseDetailMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnCloseDetailMouseClicked
        // TODO add your handling code here:
        showPanelView();
        loadData();
    }//GEN-LAST:event_btnCloseDetailMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private rojerusan.RSMaterialButtonRectangle btnCancelData;
    private rojerusan.RSMaterialButtonRectangle btnCancelDataSementara;
    private javax.swing.JLabel btnCloseDetail;
    private rojerusan.RSMaterialButtonRectangle btnDelete;
    private rojerusan.RSMaterialButtonRectangle btnSave;
    private javax.swing.JButton btnSetAnggota;
    private javax.swing.JButton btnSetBuku;
    private rojerusan.RSMaterialButtonRectangle btnTambah;
    private rojerusan.RSMaterialButtonRectangle btnUbah;
    private com.raven.datechooser.DateChooser dateChooser1;
    private com.raven.datechooser.DateChooser dateChooser2;
    private javax.swing.JTextField emailAnggotaTf;
    private javax.swing.JTextField idAnggotaTf;
    private javax.swing.JTextField idBukuTf;
    private javax.swing.JTextField idTf;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextField judulBukuTf;
    private javax.swing.JTextField jumlahTf;
    private javax.swing.JLabel labelHeader;
    private javax.swing.JLabel lbImage;
    private javax.swing.JLabel lbTotal;
    private javax.swing.JTextField namaAnggotaTf;
    private javax.swing.JTextField penerbitBukuTf;
    private javax.swing.JTextField pengarangBukuTf;
    private javax.swing.JPanel pnDetail;
    private javax.swing.JPanel pn_add;
    private javax.swing.JPanel pn_main;
    private javax.swing.JPanel pn_view;
    private javax.swing.JTextField searchTf;
    private table.TableCustom tableCustom1;
    private table.TableCustom tableCustom2;
    private javax.swing.JTable tblData;
    private javax.swing.JTable tblDataDetail;
    private javax.swing.JTable tblDataSementara;
    private javax.swing.JTextField tglKembaliTf;
    private javax.swing.JTextField tglPinjamTf;
    private javax.swing.JTextField tlpAnggotaTf;
    // End of variables declaration//GEN-END:variables

    //Set model
    private void setTabelModel() {
        DefaultTableModel model = (DefaultTableModel) tblData.getModel();
    }
    
    private void loadData() {
        getData((DefaultTableModel) tblData.getModel());
        btnDelete.setVisible(false);
        pnDetail.setVisible(false);
    }
    
    private void loadDataSementara() {
        getDataSementara((DefaultTableModel) tblDataSementara.getModel());
        btnDelete.setVisible(false);
        btnCancelDataSementara.setVisible(false);
    }
    
    private void showPanelView(){
        pn_main.removeAll();
        pn_main.add(new Peminjaman(userId));
        pn_main.repaint();
        pn_main.revalidate();
    }
    
    private void resetForm() {
        idTf.setText("");
        judulBukuTf.setText("");
        pengarangBukuTf.setText("");
    }
    
    private void resetFormBuku() {
        idBukuTf.setText("");
        judulBukuTf.setText("");
        pengarangBukuTf.setText("");
        penerbitBukuTf.setText("");
        jumlahTf.setText("");
        
        ImageIcon defaultIcon = new ImageIcon(getClass().getResource("/Img/Add Book.png"));
        lbImage.setIcon(defaultIcon);
    }

    private void getData(DefaultTableModel model) {
        model.setRowCount(0);
        try {
            String sql = "SELECT pm.id_peminjaman, pm.tanggal_peminjaman, pm.tanggal_pengembalian, pm.total_pinjam, agt.nama_anggota, usr.nama_user\n" +
                            "FROM peminjaman pm\n" +
                            "INNER JOIN anggota agt ON agt.id_anggota = pm.id_anggota\n" +
                            "INNER JOIN user usr ON usr.id_user = pm.id_user ORDER BY pm.id_peminjaman ASC";
            
            pStm = conn.prepareStatement(sql);
            ResultSet rs = pStm.executeQuery(sql);
            
            while(rs.next()) {
                String idPeminjaman = rs.getString("id_peminjaman");
                String tanggalPinjam = rs.getString("tanggal_peminjaman");
                String tanggalKembali = rs.getString("tanggal_pengembalian");
                String totalPinjam = rs.getString("total_pinjam");
                String namaAnggota = rs.getString("nama_anggota");
                String namaUser = rs.getString("nama_user");
                
                Object[] dataPeminjaman = {
                    idPeminjaman,
                    tanggalPinjam,
                    tanggalKembali,
                    totalPinjam,
                    namaAnggota,
                    namaUser
                };
                model.addRow(dataPeminjaman);
            }
        } catch (Exception e) {
            e.printStackTrace();
            System.err.println("Gagal" + e.getMessage());
        }
    }
    
    private void setTableModelSementara(){
        DefaultTableModel model = (DefaultTableModel) tblDataSementara.getModel();
    }
    
    private void setTableModelDetail(){
        DefaultTableModel model = (DefaultTableModel) tblDataDetail.getModel();
    }
    
    private void getDataDetail(DefaultTableModel model, String id) {
        model.setRowCount(0);
        try {
            String sql = "SELECT dp.id_peminjaman, bk.id_buku, bk.judul_buku, dp.jumlah_pinjam, dp.status_peminjaman\n" +
                            "FROM detail_peminjaman dp\n" +
                            "INNER JOIN buku bk ON bk.id_buku = dp.id_buku\n" +
                            "WHERE dp.id_peminjaman ='"+ id +"'" +
                            "ORDER BY dp.id_peminjaman ASC";
            
            pStm = conn.prepareStatement(sql);
            ResultSet rs = pStm.executeQuery(sql);
            
            while(rs.next()) {
                String idPeminjaman = rs.getString("id_peminjaman");
                String idBuku = rs.getString("id_buku");
                String judulBuku = rs.getString("judul_buku");
                String jumlahPinjam = rs.getString("jumlah_pinjam");
                String statusPeminjaman = rs.getString("status_peminjaman");
                
                Object[] dataDetailPeminjaman = {
                    idPeminjaman,
                    idBuku,
                    judulBuku,
                    jumlahPinjam,
                    statusPeminjaman
                };
                model.addRow(dataDetailPeminjaman);
            }
        } catch (Exception e) {
            e.printStackTrace();
            System.err.println("Gagal" + e.getMessage());
        }
    }
    
    private void getDataSementara(DefaultTableModel model) {
        model.setRowCount(0);
        try {
            String sql = "SELECT * FROM sementara";
            
            pStm = conn.prepareStatement(sql);
            ResultSet rs = pStm.executeQuery(sql);
            
            while(rs.next()) {
                String idBuku = rs.getString("id_buku");
                String judulBuku = rs.getString("judul_buku");
                String pengarangBuku = rs.getString("pengarang_buku");
                String penerbitBuku = rs.getString("penerbit_buku");
                String jumlahPinjam = rs.getString("jumlah_pinjam");
                
                Object[] dataSementara = {
                    idBuku,
                    judulBuku,
                    pengarangBuku,
                    penerbitBuku,
                    jumlahPinjam
                };
                model.addRow(dataSementara);
            }
        } catch (Exception e) {
            e.printStackTrace();
            System.err.println("Gagal" + e.getMessage());
        }
    }
    
    //Set id otomatis
    private String setIdPeminjaman() {
        String urut = null;
        Date now = new Date();
        SimpleDateFormat noFormat = new SimpleDateFormat("yyMM");
        String no = noFormat.format(now);
        
        String sql = "SELECT RIGHT (id_peminjaman, 3) AS Nomor " +
                "FROM peminjaman " + 
                "WHERE id_peminjaman LIKE 'PMJ" + no + "%' " +
                "ORDER BY id_peminjaman DESC " +
                "LIMIT 1";
        
        try {
            stm = conn.prepareStatement(sql);
            rs = stm.executeQuery(sql);
            
            if(rs.next()) {
                int nomor = Integer.parseInt(rs.getString("Nomor")) + 1;
                urut = "PMJ" + no + String.format("%03d", nomor);
            } else {
                urut = "PMJ" + no + "001";
            }
        } catch (Exception e) {
            e.printStackTrace();
            System.err.println("Set Id GAGAL" + e.getMessage());
        }
        return urut;
    }
    
    private void setAnggota() {
        boolean closeable = true;
        DataAnggota anggota = new DataAnggota(null, closeable);
        anggota.setVisible(true);
        
        idAnggotaTf.setText(anggota.getIdAnggota());
        namaAnggotaTf.setText(anggota.getNamaAnggota());
        emailAnggotaTf.setText(anggota.getEmailAnggota());
        tlpAnggotaTf.setText(anggota.getTeleponAnggota());
        
        idAnggotaTf.setEnabled(false);
        namaAnggotaTf.setEnabled(false);
        emailAnggotaTf.setEnabled(false);
        tlpAnggotaTf.setEnabled(false);
    }
    
    private void setBuku() {
        boolean closeable = true;
        DataBuku buku = new DataBuku(null, closeable);
        buku.setVisible(true);
        
        String id = buku.getIdBuku();
        idBukuTf.setText(buku.getIdBuku());
        judulBukuTf.setText(buku.getJudulBuku());
        pengarangBukuTf.setText(buku.getPengarangBuku());
        penerbitBukuTf.setText(buku.getPenerbitBuku());
        
        idBukuTf.setEnabled(false);
        judulBukuTf.setEnabled(false);
        pengarangBukuTf.setEnabled(false);
        penerbitBukuTf.setEnabled(false);
        
        setImage(lbImage, id);
    }
    
    //Validasi stok buku
    private boolean cekStok(String idBuku, int jumlahPinjam) {
        try {
            String sql = "SELECT stok FROM buku WHERE id_buku=?";
            pStm = conn.prepareStatement(sql);
            pStm.setString(1, idBuku);
            
            rs = pStm.executeQuery();
            
            if(rs.next()) {
                int stokTersedia = rs.getInt("stok");
                return jumlahPinjam <= stokTersedia;
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        return false;
    }
    
    private void insertDataSementara() {
        String idBuku = idBukuTf.getText();
        String judulBuku = judulBukuTf.getText();
        String pengarangBuku = pengarangBukuTf.getText();
        String penerbitBuku = penerbitBukuTf.getText();
        int jumlahPinjam = Integer.parseInt(jumlahTf.getText());
        String statusPinjam = "Sedang Dipinjam";
        
        if(idBuku.isEmpty() || judulBuku.isEmpty() || pengarangBuku.isEmpty() || penerbitBuku.isEmpty() || statusPinjam.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Field tidak boleh ada yang kosong", "Validasi", JOptionPane.ERROR_MESSAGE);
            return;
        } 
        
        if(!cekStok(idBuku, jumlahPinjam)) {
            JOptionPane.showMessageDialog(this, "Stok Buku Tidak Tersedia!", "Peringatan", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try {
            String sql = "INSERT INTO sementara (id_buku, judul_buku, pengarang_buku, penerbit_buku, jumlah_pinjam, status_pinjam) values (?,?,?,?,?,?)";
            pStm = conn.prepareStatement(sql);
            pStm.setString(1, idBuku);
            pStm.setString(2, judulBuku);
            pStm.setString(3, pengarangBuku);
            pStm.setString(4, penerbitBuku);
            pStm.setInt(5, jumlahPinjam);
            pStm.setString(6, statusPinjam);
            
            pStm.executeUpdate();
            
            int totalPinjam = getTotalPinjam();
            lbTotal.setText(String.valueOf(totalPinjam));
            loadDataSementara();
            
            if(JOptionPane.showConfirmDialog(this, "Mau Tambah Buku?", 
                    "Konfirmasi", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION){
                resetFormBuku();
                btnSetBuku.requestFocus();
            } else {
                resetFormBuku();
                btnSave.requestFocus();
            }
            
        } catch (Exception e) {
            e.printStackTrace();
            System.err.println("Data gagal ditambahkan sementara" + e.getMessage());
        }
    }
    
    private int getTotalPinjam(){
        int totalPinjam = 0;
        
        try {
            String sql = "SELECT SUM(jumlah_pinjam) as total FROM sementara";
            PreparedStatement pStm = conn.prepareStatement(sql);
            ResultSet rs = pStm.executeQuery();
            
            if(rs.next()) {
                totalPinjam = rs.getInt("total");
            }
        } catch (Exception e) {
            e.printStackTrace();
            System.out.println("Err" + e.getMessage());
        }
        return totalPinjam;
    }

    private void insertData() {
        String idPeminjaman = idTf.getText();
        String tglPinjam = tglPinjamTf.getText();
        String tglKembali = tglKembaliTf.getText();
        String totalPinjam = lbTotal.getText();
        String idAnggota = idAnggotaTf.getText();
        
        if(idPeminjaman.isEmpty() || tglPinjam.isEmpty() || tglKembali.isEmpty() || totalPinjam.isEmpty() || idAnggota.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Field tidak boleh ada yang kosong", "Validasi", JOptionPane.ERROR_MESSAGE);
            return;
        } 
        
        try {
            String sql = "INSERT INTO peminjaman (id_peminjaman, tanggal_peminjaman, tanggal_pengembalian, total_pinjam, id_anggota, id_user) values (?,?,?,?,?,?)";
            pStm = conn.prepareStatement(sql);
            pStm.setString(1, idPeminjaman);
            pStm.setString(2, tglPinjam);
            pStm.setString(3, tglKembali);
            pStm.setString(4, totalPinjam);
            pStm.setString(5, idAnggota);
            pStm.setString(6, userId);
            
            int rowInsertData = pStm.executeUpdate();
            if(rowInsertData > 0) {
                JOptionPane.showMessageDialog(this, "Data berhasil ditambahkan");
            }
        } catch (Exception e) {
            e.printStackTrace();
            System.err.println("Data gagal ditambahkan" + e.getMessage());
        }
    }
    
    private void insertDataDetail() {
        String idPeminjaman = idTf.getText();
        
        try {
            String sql = "INSERT INTO detail_peminjaman (id_peminjaman, id_buku, jumlah_pinjam, status_peminjaman) SELECT '"+ idPeminjaman +"', id_buku, jumlah_pinjam, status_pinjam FROM sementara";
            pStm = conn.prepareStatement(sql);
            
            pStm.executeUpdate();
        } catch (Exception e) {
            e.printStackTrace();
            System.err.println("Data gagal ditambahkan" + e.getMessage());
        }
    }

    private void dataTabelSementara() { 
        int row = tblDataSementara.getSelectedRow();
        if(row != -1) {
            btnSetBuku.setEnabled(false);
            idBukuTf.setEnabled(false);
            judulBukuTf.setEnabled(false);
            pengarangBukuTf.setEnabled(false);
            penerbitBukuTf.setEnabled(false);

            String id = tblDataSementara.getValueAt(row, 0).toString();

            idBukuTf.setText(tblDataSementara.getValueAt(row, 0).toString());
            judulBukuTf.setText(tblDataSementara.getValueAt(row, 1).toString());
            pengarangBukuTf.setText(tblDataSementara.getValueAt(row, 2).toString());
            penerbitBukuTf.setText(tblDataSementara.getValueAt(row, 3).toString());
            jumlahTf.setText(tblDataSementara.getValueAt(row, 4).toString());

            setImage(lbImage, id);
            jumlahTf.requestFocus();
        }
    }
    
    //Set image
    private void setImage(JLabel lb_gambar, String id) {
        try {
            String sql = "SELECT * FROM buku WHERE id_buku = '"+ id +"'";
            pStm = conn.prepareStatement(sql);
            rs = pStm.executeQuery();
            
            if(rs.next()) {
                String img = rs.getString("gambar");
                if(img != null) {
                    ImageIcon imageIcon = new ImageIcon( new ImageIcon(img).getImage()
                            .getScaledInstance(lb_gambar.getWidth(), lb_gambar.getHeight(), Image.SCALE_SMOOTH));
                    lb_gambar.setIcon(imageIcon);
                } else {
                    ImageIcon defaultIcon = new ImageIcon(getClass().getResource("Img/Add Book.png"));
                    lb_gambar.setIcon(defaultIcon);
                }
            }
        } catch (Exception e) {
            System.err.println("Set image error " + e.getMessage());
        }
    }
    
    private void updateData() {
        String idBuku = idBukuTf.getText();
        String jumlahPinjam = jumlahTf.getText();
        
        if (idBuku.isEmpty() || jumlahPinjam.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Field tidak boleh ada yang kosong", "Validasi",
                    JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try {
            String sql = "UPDATE sementara SET jumlah_pinjam=? WHERE id_buku=?";
            
            pStm = conn.prepareStatement(sql);
            pStm.setString(1, jumlahPinjam);
            pStm.setString(2, idBuku);
            
            int totalPinjam = getTotalPinjam();
            lbTotal.setText(String.valueOf(totalPinjam));
            
            int rowUpadated = pStm.executeUpdate();
            if(rowUpadated > 0) {
                JOptionPane.showMessageDialog(this, "Data berhasil diupdate");
                resetFormBuku();
                loadDataSementara();
            }
        } catch (SQLException e) {
            e.printStackTrace();
            System.err.println("Data gagal diupdate" + e.getMessage());
        }
    }
    
    
    private void deleteData() {
    int selectRow = tblDataSementara.getSelectedRow();
    
    if (selectRow != -1) {
        int confirm = JOptionPane.showConfirmDialog(this, 
                "Apakah yakin ingin dihapus?",
                "Konfirmasi Hapus Data",
                JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            try {
                String id = tblDataSementara.getValueAt(selectRow, 0).toString();
                String sql = "DELETE FROM sementara WHERE id_buku=?";
                try (PreparedStatement pStm = conn.prepareStatement(sql)) {
                    pStm.setString(1, id);

                    int rowDeleted = pStm.executeUpdate();
                    if (rowDeleted > 0) {
                        JOptionPane.showMessageDialog(this, "Data berhasil Dihapus");
                    } else {
                        JOptionPane.showMessageDialog(this, "Data gagal Dihapus");
                    }
                }
            } catch (SQLException e) {
                e.printStackTrace();
                System.err.println("Delete data gagal: " + e.getMessage());
            }
        }
        int totalPinjam = getTotalPinjam();
        lbTotal.setText(String.valueOf(totalPinjam));
        btnUbah.setText("tambah");
        resetFormBuku();
        loadDataSementara();
    } else {
        JOptionPane.showMessageDialog(this, "Pilih baris yang ingin dihapus terlebih dahulu.");
    }
}

    
    private void deleteDataSementara() {
        try {
            String sql = "DELETE FROM sementara";
            pStm = conn.prepareStatement(sql);
            pStm.executeUpdate();
            
        } catch (Exception e) {
            e.printStackTrace();
            System.err.println("Delete data gagal" + e.getMessage());

        }
    }
    
    private void searchData() {
        String keyword = searchTf.getText();
        
        DefaultTableModel model = (DefaultTableModel) tblData.getModel();
        model.setRowCount(0);
        
        try {
           String sql = "SELECT pm.id_peminjaman, pm.tanggal_peminjaman, pm.tanggal_pengembalian, pm.total_pinjam, agt.nama_anggota, usr.nama_user\n" +
                            "FROM peminjaman pm\n" +
                            "INNER JOIN anggota agt ON agt.id_anggota = pm.id_anggota\n" +
                            "INNER JOIN user usr ON usr.id_user = pm.id_user\n" +
                            "WHERE pm.id_peminjaman LIKE ? OR agt.nama_anggota LIKE ?";
            pStm = conn.prepareStatement(sql);
            pStm.setString(1, "%" + keyword + "%");
            pStm.setString(2, "%" + keyword + "%");
            rs = pStm.executeQuery();
            
            while(rs.next()) {
                String idPeminjaman = rs.getString("id_peminjaman");
                String tanggalPinjam = rs.getString("tanggal_peminjaman");
                String tanggalKembali = rs.getString("tanggal_pengembalian");
                String totalPinjam = rs.getString("total_pinjam");
                String namaAnggota = rs.getString("nama_anggota");
                String namaUser = rs.getString("nama_user");
                
                Object[] dataPeminjaman = {
                    idPeminjaman,
                    tanggalPinjam,
                    tanggalKembali,
                    totalPinjam,
                    namaAnggota,
                    namaUser
                };
                model.addRow(dataPeminjaman);
            }
        } catch (Exception e) {
            e.printStackTrace();
            System.err.println("Gagal cari data" + e.getMessage());
        }
    }

}
